import { EventObject, assign } from "xstate";
import { ChatBotContext } from "./chat-bot.machine";

interface VerificationRequestEvent extends EventObject {
    verificationRequest: string;
}

export const sendGreeting = assign<ChatBotContext>({
    responseMessage: () =>
        "OlÃ¡! Sou o assistente virtual da AletheiaFact.org, estou aqui para ajudÃ¡-lo(a) a combater desinformaÃ§Ãµes ğŸ™‚ VocÃª gostaria de fazer uma denÃºncia agora?\n\nResponda SIM para continuar ou NÃƒO se nÃ£o deseja denunciar.",
});

export const sendNoMessage = assign<ChatBotContext>({
    responseMessage: () =>
        "Entendi. Nosso trabalho Ã© verificar informaÃ§Ãµes falsas.\n\nSe quiser saber mais sobre o que fazemos, visite: https://aletheiafact.org. Se mudar de ideia e desejar fazer uma denÃºncia, basta digitar DENÃšNCIA a qualquer momento.",
});

export const sendNotUnderstoodMessage = assign<ChatBotContext>({
    responseMessage: () =>
        "Desculpe, nÃ£o entendi sua resposta. Para continuar, preciso que vocÃª digite SIM se deseja fazer uma denÃºncia, ou NÃƒO se nÃ£o deseja.\n\nVocÃª gostaria de fazer uma denÃºncia agora?",
});

export const askForForVerificationRequest = assign<ChatBotContext>({
    responseMessage: () =>
        "Por favor, me conte com detalhes o que vocÃª gostaria de denunciar.\n\nPor favor, inclua todas as informaÃ§Ãµes que considerar relevantes para que possamos verificar a denÃºncia de forma eficiente ğŸ‘€",
});

export const saveVerificationRequest = assign<ChatBotContext>({
    verificationRequest: (context, event) =>
        (event as VerificationRequestEvent).verificationRequest,
});

export const sendThanks = assign<ChatBotContext>({
    responseMessage: () =>
        "Muito obrigada por sua contribuiÃ§Ã£o!\n\nSua informaÃ§Ã£o serÃ¡ analisada pela nossa equipe âœ…Para saber mais, visite nosso site: https://aletheiafact.org.\n\nDeseja relatar outra denÃºncia? Responda SIM para continuar ou NÃƒO para encerrar.",
});

export const setResponseMessage = assign<ChatBotContext>({
    responseMessage: (context) => context.responseMessage,
});
