import { EventObject, assign } from "xstate";
import { ChatBotContext } from "./chat-bot.machine";

interface VerificationRequestEvent extends EventObject {
    verificationRequest: string;
}

const MESSAGES = {
    greeting:
        "Ol√°! Sou o assistente virtual da AletheiaFact.org, estou aqui para ajud√°-lo(a) a combater desinforma√ß√µes üôÇ Voc√™ gostaria de fazer uma den√∫ncia agora?\n\nResponda SIM para continuar ou N√ÉO se n√£o deseja denunciar.",
    noMessage:
        "Entendi. Nosso trabalho √© verificar informa√ß√µes falsas.\n\nSe quiser saber mais sobre o que fazemos, visite: https://aletheiafact.org. Se mudar de ideia e desejar fazer uma den√∫ncia, basta digitar DEN√öNCIA a qualquer momento.",
    notUnderstood:
        "Desculpe, n√£o entendi sua resposta. Para continuar, preciso que voc√™ digite SIM se deseja fazer uma den√∫ncia, ou N√ÉO se n√£o deseja.\n\nVoc√™ gostaria de fazer uma den√∫ncia agora?",
    askForVerificationRequest:
        "Por favor, me conte com detalhes o que voc√™ gostaria de denunciar.\n\nPor favor, inclua todas as informa√ß√µes que considerar relevantes para que possamos verificar a den√∫ncia de forma eficiente üëÄ",
    thanks: "Muito obrigada por sua contribui√ß√£o!\n\nSua informa√ß√£o ser√° analisada pela nossa equipe ‚úÖPara saber mais, visite nosso site: https://aletheiafact.org.\n\nDeseja relatar outra den√∫ncia? Responda SIM para continuar ou N√ÉO para encerrar.",
};

export const sendGreeting = assign<ChatBotContext>({
    responseMessage: () => MESSAGES.greeting,
});

export const sendNoMessage = assign<ChatBotContext>({
    responseMessage: () => MESSAGES.noMessage,
});

export const sendNotUnderstoodMessage = assign<ChatBotContext>({
    responseMessage: () => MESSAGES.notUnderstood,
});

export const askForVerificationRequest = assign<ChatBotContext>({
    responseMessage: () => MESSAGES.askForVerificationRequest,
});

export const saveVerificationRequest = assign<ChatBotContext>({
    verificationRequest: (context, event) =>
        (event as VerificationRequestEvent).verificationRequest,
});

export const sendThanks = assign<ChatBotContext>({
    responseMessage: () => MESSAGES.thanks,
});

export const setResponseMessage = assign<ChatBotContext>({
    responseMessage: (context) => context.responseMessage,
});
