@startuml getClaimReviewPage
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 200
skinparam sequenceParticipant underline

!theme mars
title Claim Review Page\n\npersonality/:personalitySlug/claim/:claimSlug/sentence/:sentenceHash

actor User
participant "Claim Controller" as A
participant "Personality Service" as B
participant "Claim Service" as C
participant "Claim Review Service" as D
participant "Claim Revision Service" as E

User -> A ++: //Request claims reviews page// :getClaimReviewPage()
note right
  receive sentenceHash,
  personalitySlug and claimSlug
  from the endpoint of the URL
end note

||15||
A ->> B ++: :getBySlug(\n    personalitySlug, language\n)
B -->> A --: //find and return personality and get all personality claims and claim revisions.//
||15||
A ->> C ++: :getByPersonalityIdAndClaimSlug(\n    personality._id, claimSlug\n)
C -->> A --: //return claim.//
== :_getSentenceByHashAndClaimRevisionId(\n    sentenceHash, claim._id, req\n) ==
A ->> D ++: :getReviewStatsBySentenceHash(sentenceHash)
||15||
D -->> A: //return stats from claim review//
||15||
A ->> E ++: :getRevisionById(claimId)
||15||
E -->> A --: //return claim revision//
||15||
A ->> D: :getUserReviewBySentenceHash(\n    sentenceHash, user?._id\n)
||15||
D -->> A --: //return User who made the review//
||15||
A -> A: //return the claim review container//

A --> User --: //Response is returned to the client//
@enduml
